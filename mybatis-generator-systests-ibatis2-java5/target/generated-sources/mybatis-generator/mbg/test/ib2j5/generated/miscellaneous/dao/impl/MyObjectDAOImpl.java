package mbg.test.ib2j5.generated.miscellaneous.dao.impl;

import com.ibatis.sqlmap.client.SqlMapClient;
import java.sql.SQLException;
import java.util.List;
import mbg.test.ib2j5.generated.miscellaneous.dao.MyObjectDAO;
import mbg.test.ib2j5.generated.miscellaneous.model.MyObject;
import mbg.test.ib2j5.generated.miscellaneous.model.MyObjectCriteria;
import mbg.test.ib2j5.generated.miscellaneous.model.MyObjectKey;

public class MyObjectDAOImpl implements MyObjectDAO {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PKFIELDS
     *
     * @mbggenerated
     */
    private SqlMapClient sqlMapClient;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDS
     *
     * @mbggenerated
     */
    public MyObjectDAOImpl(SqlMapClient sqlMapClient) {
        super();
        this.sqlMapClient = sqlMapClient;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDS
     *
     * @mbggenerated
     */
    public int countMyObjectByExample(MyObjectCriteria example) throws SQLException {
        Integer count = (Integer)  sqlMapClient.queryForObject("PKFIELDS.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDS
     *
     * @mbggenerated
     */
    public int deleteMyObjectByExample(MyObjectCriteria example) throws SQLException {
        int rows = sqlMapClient.delete("PKFIELDS.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDS
     *
     * @mbggenerated
     */
    public int deleteMyObjectByPrimaryKey(MyObjectKey _key) throws SQLException {
        int rows = sqlMapClient.delete("PKFIELDS.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDS
     *
     * @mbggenerated
     */
    public void insertMyObject(MyObject record) throws SQLException {
        sqlMapClient.insert("PKFIELDS.insert", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDS
     *
     * @mbggenerated
     */
    public void insertMyObjectSelective(MyObject record) throws SQLException {
        sqlMapClient.insert("PKFIELDS.insertSelective", record);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDS
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public List<MyObject> selectMyObjectByExample(MyObjectCriteria example) throws SQLException {
        List<MyObject> list = sqlMapClient.queryForList("PKFIELDS.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDS
     *
     * @mbggenerated
     */
    public MyObject selectMyObjectByPrimaryKey(MyObjectKey _key) throws SQLException {
        MyObject record = (MyObject) sqlMapClient.queryForObject("PKFIELDS.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDS
     *
     * @mbggenerated
     */
    public int updateMyObjectByExampleSelective(MyObject record, MyObjectCriteria example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("PKFIELDS.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDS
     *
     * @mbggenerated
     */
    public int updateMyObjectByExample(MyObject record, MyObjectCriteria example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("PKFIELDS.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDS
     *
     * @mbggenerated
     */
    public int updateMyObjectByPrimaryKeySelective(MyObject record) throws SQLException {
        int rows = sqlMapClient.update("PKFIELDS.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDS
     *
     * @mbggenerated
     */
    public int updateMyObjectByPrimaryKey(MyObject record) throws SQLException {
        int rows = sqlMapClient.update("PKFIELDS.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PKFIELDS
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends MyObjectCriteria {
        private Object record;

        public UpdateByExampleParms(Object record, MyObjectCriteria example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}