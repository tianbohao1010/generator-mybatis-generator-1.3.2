package mbg.test.mb3.generated.annotated.miscellaneous.mapper;

import java.util.List;
import mbg.test.common.BaseInterface;
import mbg.test.mb3.generated.annotated.miscellaneous.model.Regexrename;
import mbg.test.mb3.generated.annotated.miscellaneous.model.RegexrenameCriteria;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface RegexrenameMapper extends BaseInterface {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table REGEXRENAME
     *
     * @mbggenerated
     */
    @SelectProvider(type=RegexrenameSqlProvider.class, method="countByExample")
    int countByExample(RegexrenameCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table REGEXRENAME
     *
     * @mbggenerated
     */
    @DeleteProvider(type=RegexrenameSqlProvider.class, method="deleteByExample")
    int deleteByExample(RegexrenameCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table REGEXRENAME
     *
     * @mbggenerated
     */
    @Delete({
        "delete from REGEXRENAME",
        "where CUST_ID = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table REGEXRENAME
     *
     * @mbggenerated
     */
    @Insert({
        "insert into REGEXRENAME (CUST_ID, CUST_NAME, ",
        "CUST_ADDRESS, ZIP_CODE)",
        "values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, ",
        "#{address,jdbcType=VARCHAR}, #{zipCode,jdbcType=CHAR})"
    })
    @SelectKey(statement="call next value for TestSequence", keyProperty="id", before=true, resultType=Integer.class)
    int insert(Regexrename record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table REGEXRENAME
     *
     * @mbggenerated
     */
    @InsertProvider(type=RegexrenameSqlProvider.class, method="insertSelective")
    @SelectKey(statement="call next value for TestSequence", keyProperty="id", before=true, resultType=Integer.class)
    int insertSelective(Regexrename record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table REGEXRENAME
     *
     * @mbggenerated
     */
    @SelectProvider(type=RegexrenameSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="CUST_ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="CUST_NAME", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="CUST_ADDRESS", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="ZIP_CODE", property="zipCode", jdbcType=JdbcType.CHAR)
    })
    List<Regexrename> selectByExample(RegexrenameCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table REGEXRENAME
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "CUST_ID, CUST_NAME, CUST_ADDRESS, ZIP_CODE",
        "from REGEXRENAME",
        "where CUST_ID = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="CUST_ID", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="CUST_NAME", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="CUST_ADDRESS", property="address", jdbcType=JdbcType.VARCHAR),
        @Result(column="ZIP_CODE", property="zipCode", jdbcType=JdbcType.CHAR)
    })
    Regexrename selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table REGEXRENAME
     *
     * @mbggenerated
     */
    @UpdateProvider(type=RegexrenameSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Regexrename record, @Param("example") RegexrenameCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table REGEXRENAME
     *
     * @mbggenerated
     */
    @UpdateProvider(type=RegexrenameSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Regexrename record, @Param("example") RegexrenameCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table REGEXRENAME
     *
     * @mbggenerated
     */
    @UpdateProvider(type=RegexrenameSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Regexrename record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table REGEXRENAME
     *
     * @mbggenerated
     */
    @Update({
        "update REGEXRENAME",
        "set CUST_NAME = #{name,jdbcType=VARCHAR},",
          "CUST_ADDRESS = #{address,jdbcType=VARCHAR},",
          "ZIP_CODE = #{zipCode,jdbcType=CHAR}",
        "where CUST_ID = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Regexrename record);
}