package mbg.test.mb3.generated.annotated.hierarchical.Immutable.Mapper;

import java.util.List;
import mbg.test.mb3.generated.annotated.hierarchical.Immutable.Model.Pkfieldsblobs;
import mbg.test.mb3.generated.annotated.hierarchical.Immutable.Model.PkfieldsblobsExample;
import mbg.test.mb3.generated.annotated.hierarchical.Immutable.Model.PkfieldsblobsKey;
import mbg.test.mb3.generated.annotated.hierarchical.Immutable.Model.PkfieldsblobsWithBLOBs;
import org.apache.ibatis.annotations.Arg;
import org.apache.ibatis.annotations.ConstructorArgs;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface PkfieldsblobsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDSBLOBS
     *
     * @mbggenerated Thu Dec 21 14:43:43 CST 2017
     */
    @SelectProvider(type=PkfieldsblobsSqlProvider.class, method="countByExample")
    int countByExample(PkfieldsblobsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDSBLOBS
     *
     * @mbggenerated Thu Dec 21 14:43:43 CST 2017
     */
    @DeleteProvider(type=PkfieldsblobsSqlProvider.class, method="deleteByExample")
    int deleteByExample(PkfieldsblobsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDSBLOBS
     *
     * @mbggenerated Thu Dec 21 14:43:43 CST 2017
     */
    @Delete({
        "delete from PKFIELDSBLOBS",
        "where ID1 = #{id1,jdbcType=INTEGER}",
          "and ID2 = #{id2,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(PkfieldsblobsKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDSBLOBS
     *
     * @mbggenerated Thu Dec 21 14:43:43 CST 2017
     */
    @Insert({
        "insert into PKFIELDSBLOBS (ID1, ID2, ",
        "FIRSTNAME, LASTNAME, ",
        "BLOB1)",
        "values (#{id1,jdbcType=INTEGER}, #{id2,jdbcType=INTEGER}, ",
        "#{firstname,jdbcType=VARCHAR}, #{lastname,jdbcType=VARCHAR}, ",
        "#{blob1,jdbcType=VARBINARY})"
    })
    int insert(PkfieldsblobsWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDSBLOBS
     *
     * @mbggenerated Thu Dec 21 14:43:43 CST 2017
     */
    @InsertProvider(type=PkfieldsblobsSqlProvider.class, method="insertSelective")
    int insertSelective(PkfieldsblobsWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDSBLOBS
     *
     * @mbggenerated Thu Dec 21 14:43:43 CST 2017
     */
    @SelectProvider(type=PkfieldsblobsSqlProvider.class, method="selectByExampleWithBLOBs")
    @ConstructorArgs({
        @Arg(column="A_ID1", javaType=Integer.class, jdbcType=JdbcType.INTEGER, id=true),
        @Arg(column="A_ID2", javaType=Integer.class, jdbcType=JdbcType.INTEGER, id=true),
        @Arg(column="A_FIRSTNAME", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="A_LASTNAME", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="A_BLOB1", javaType=byte[].class, jdbcType=JdbcType.VARBINARY)
    })
    List<PkfieldsblobsWithBLOBs> selectByExampleWithBLOBs(PkfieldsblobsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDSBLOBS
     *
     * @mbggenerated Thu Dec 21 14:43:43 CST 2017
     */
    @SelectProvider(type=PkfieldsblobsSqlProvider.class, method="selectByExample")
    @ConstructorArgs({
        @Arg(column="A_ID1", javaType=Integer.class, jdbcType=JdbcType.INTEGER, id=true),
        @Arg(column="A_ID2", javaType=Integer.class, jdbcType=JdbcType.INTEGER, id=true),
        @Arg(column="A_FIRSTNAME", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="A_LASTNAME", javaType=String.class, jdbcType=JdbcType.VARCHAR)
    })
    List<Pkfieldsblobs> selectByExample(PkfieldsblobsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDSBLOBS
     *
     * @mbggenerated Thu Dec 21 14:43:43 CST 2017
     */
    @Select({
        "select",
        "A.ID1 as A_ID1, A.ID2 as A_ID2, A.FIRSTNAME as A_FIRSTNAME, A.LASTNAME as A_LASTNAME, ",
        "A.BLOB1 as A_BLOB1",
        "from PKFIELDSBLOBS A",
        "where A.ID1 = #{id1,jdbcType=INTEGER}",
          "and A.ID2 = #{id2,jdbcType=INTEGER}"
    })
    @ConstructorArgs({
        @Arg(column="A_ID1", javaType=Integer.class, jdbcType=JdbcType.INTEGER, id=true),
        @Arg(column="A_ID2", javaType=Integer.class, jdbcType=JdbcType.INTEGER, id=true),
        @Arg(column="A_FIRSTNAME", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="A_LASTNAME", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="A_BLOB1", javaType=byte[].class, jdbcType=JdbcType.VARBINARY)
    })
    PkfieldsblobsWithBLOBs selectByPrimaryKey(PkfieldsblobsKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDSBLOBS
     *
     * @mbggenerated Thu Dec 21 14:43:43 CST 2017
     */
    @UpdateProvider(type=PkfieldsblobsSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") PkfieldsblobsWithBLOBs record, @Param("example") PkfieldsblobsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDSBLOBS
     *
     * @mbggenerated Thu Dec 21 14:43:43 CST 2017
     */
    @UpdateProvider(type=PkfieldsblobsSqlProvider.class, method="updateByExampleWithBLOBs")
    int updateByExampleWithBLOBs(@Param("record") PkfieldsblobsWithBLOBs record, @Param("example") PkfieldsblobsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDSBLOBS
     *
     * @mbggenerated Thu Dec 21 14:43:43 CST 2017
     */
    @UpdateProvider(type=PkfieldsblobsSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Pkfieldsblobs record, @Param("example") PkfieldsblobsExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDSBLOBS
     *
     * @mbggenerated Thu Dec 21 14:43:43 CST 2017
     */
    @UpdateProvider(type=PkfieldsblobsSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(PkfieldsblobsWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDSBLOBS
     *
     * @mbggenerated Thu Dec 21 14:43:43 CST 2017
     */
    @Update({
        "update PKFIELDSBLOBS",
        "set FIRSTNAME = #{firstname,jdbcType=VARCHAR},",
          "LASTNAME = #{lastname,jdbcType=VARCHAR},",
          "BLOB1 = #{blob1,jdbcType=VARBINARY}",
        "where ID1 = #{id1,jdbcType=INTEGER}",
          "and ID2 = #{id2,jdbcType=INTEGER}"
    })
    int updateByPrimaryKeyWithBLOBs(PkfieldsblobsWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PKFIELDSBLOBS
     *
     * @mbggenerated Thu Dec 21 14:43:43 CST 2017
     */
    @Update({
        "update PKFIELDSBLOBS",
        "set FIRSTNAME = #{firstname,jdbcType=VARCHAR},",
          "LASTNAME = #{lastname,jdbcType=VARCHAR}",
        "where ID1 = #{id1,jdbcType=INTEGER}",
          "and ID2 = #{id2,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Pkfieldsblobs record);
}