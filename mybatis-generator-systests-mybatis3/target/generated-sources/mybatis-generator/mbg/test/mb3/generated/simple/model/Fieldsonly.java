package mbg.test.mb3.generated.simple.model;

public class Fieldsonly {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column FIELDSONLY.INTEGERFIELD
     *
     * @mbggenerated Thu Dec 21 14:43:44 CST 2017
     */
    private Integer integerfield;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column FIELDSONLY.DOUBLEFIELD
     *
     * @mbggenerated Thu Dec 21 14:43:44 CST 2017
     */
    private Double doublefield;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column FIELDSONLY.FLOATFIELD
     *
     * @mbggenerated Thu Dec 21 14:43:44 CST 2017
     */
    private Double floatfield;

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column FIELDSONLY.INTEGERFIELD
     *
     * @return the value of FIELDSONLY.INTEGERFIELD
     *
     * @mbggenerated Thu Dec 21 14:43:44 CST 2017
     */
    public Integer getIntegerfield() {
        return integerfield;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column FIELDSONLY.INTEGERFIELD
     *
     * @param integerfield the value for FIELDSONLY.INTEGERFIELD
     *
     * @mbggenerated Thu Dec 21 14:43:44 CST 2017
     */
    public void setIntegerfield(Integer integerfield) {
        this.integerfield = integerfield;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column FIELDSONLY.DOUBLEFIELD
     *
     * @return the value of FIELDSONLY.DOUBLEFIELD
     *
     * @mbggenerated Thu Dec 21 14:43:44 CST 2017
     */
    public Double getDoublefield() {
        return doublefield;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column FIELDSONLY.DOUBLEFIELD
     *
     * @param doublefield the value for FIELDSONLY.DOUBLEFIELD
     *
     * @mbggenerated Thu Dec 21 14:43:44 CST 2017
     */
    public void setDoublefield(Double doublefield) {
        this.doublefield = doublefield;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method returns the value of the database column FIELDSONLY.FLOATFIELD
     *
     * @return the value of FIELDSONLY.FLOATFIELD
     *
     * @mbggenerated Thu Dec 21 14:43:44 CST 2017
     */
    public Double getFloatfield() {
        return floatfield;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method sets the value of the database column FIELDSONLY.FLOATFIELD
     *
     * @param floatfield the value for FIELDSONLY.FLOATFIELD
     *
     * @mbggenerated Thu Dec 21 14:43:44 CST 2017
     */
    public void setFloatfield(Double floatfield) {
        this.floatfield = floatfield;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FIELDSONLY
     *
     * @mbggenerated Thu Dec 21 14:43:44 CST 2017
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        Fieldsonly other = (Fieldsonly) that;
        return (this.getIntegerfield() == null ? other.getIntegerfield() == null : this.getIntegerfield().equals(other.getIntegerfield()))
            && (this.getDoublefield() == null ? other.getDoublefield() == null : this.getDoublefield().equals(other.getDoublefield()))
            && (this.getFloatfield() == null ? other.getFloatfield() == null : this.getFloatfield().equals(other.getFloatfield()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FIELDSONLY
     *
     * @mbggenerated Thu Dec 21 14:43:44 CST 2017
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getIntegerfield() == null) ? 0 : getIntegerfield().hashCode());
        result = prime * result + ((getDoublefield() == null) ? 0 : getDoublefield().hashCode());
        result = prime * result + ((getFloatfield() == null) ? 0 : getFloatfield().hashCode());
        return result;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FIELDSONLY
     *
     * @mbggenerated Thu Dec 21 14:43:44 CST 2017
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", integerfield=").append(integerfield);
        sb.append(", doublefield=").append(doublefield);
        sb.append(", floatfield=").append(floatfield);
        sb.append("]");
        return sb.toString();
    }
}